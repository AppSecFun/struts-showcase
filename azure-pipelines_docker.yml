# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- task: Maven@3
  displayName: 'Build'
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: 'package'

- task: Bash@3
  displayName: 'RL scan'
  inputs:
    targetType: 'inline'
    script: |
      # Write your commands here
      echo 'Hello world'
      docker --version
      docker images
      mkdir -p RLreport
      pwd
      ls
      docker pull reversinglabs/rl-scanner:latest
      docker run --rm -u $(id -u):$(id -g) \
      -v "$(System.DefaultWorkingDirectory)/target:/packages:ro" -v "$(System.DefaultWorkingDirectory)/RLreport:/report" \
      -e "RLSECURE_ENCODED_LICENSE=$(rlLicenseKey)" -e "RLSECURE_SITE_KEY=$(rlSiteKey)" \
      reversinglabs/rl-scanner:latest \
      rl-scan --package-path=/packages/struts2-showcase.war \
      --report-path=/report --report-format=rl-html,rl-json,cyclonedx
      pwd
      ls RLreport
      ls "$(System.DefaultWorkingDirectory)/RLreport"

- task: PublishPipelineArtifact@1
  displayName: 'Publish SBOM'
  inputs:
    targetPath: $(System.DefaultWorkingDirectory)/RLreport/report.cyclonedx.json
    artifactName: CycloneDX-SBOM

- task: PublishPipelineArtifact@1
  displayName: 'Publish RL-json'
  inputs:
    targetPath: $(System.DefaultWorkingDirectory)/RLreport/report.rl.json
    artifactName: ReversingLabs-JSONreport

- task: PublishPipelineArtifact@1
  displayName: 'Publish RL HTML report'
  inputs:
    targetPath: $(System.DefaultWorkingDirectory)/RLreport/rl-html
    artifactName: ReversingLabs-HTMLreport         